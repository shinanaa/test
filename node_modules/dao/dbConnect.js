/**
 * Created by asus on 2017/6/2.
 */
var mysql=require('mysql');
var uuid=require("node-uuid");
var async=require("async");
function createServer(){
    var client= mysql.createConnection({
        host:"localhost",
        user:"root",
        password:"root",
        database:"shopping"
    })
    return client;
}
function dengLu(client,user,callback){
    client.query("SELECT COUNT(*) shu FROM USER u WHERE u.user_name=? AND u.user_pass=?",[user.username,user.userpass],function (err,result) {
        callback(result[0].shu);
    })
}
function selectUser(client,callback) {
    client.query("SELECT user_id, user_name, user_pass, user_age, user_sex, user_email, user_tel, user_card, user_photo FROM USER",function (err,result) {        
        callback(result);
    })
}
function insertUser(client,user,cclj,callback){
    client.query("INSERT INTO USER (user_id, user_name, user_pass, user_age, user_sex, user_email, user_tel, user_card, user_photo) VALUES (?,?,?,?,?,?,?,?,?)",
    [uuid.v4(),user.userName[0],user.password[0],user.userAge[0],user.userSex[0],user.userEmail[0],user.userPhone[0],user.userId[0],cclj],function (err,result) {
            callback(result.affectedRows);
        })
}
function deleteUserById(client,userId,callback) {
    client.query("DELETE FROM USER WHERE user_id =?",[userId],function(error,result){
        callback(result.affectedRows);
    })
}
function selectUserById(client,userId,callback) {
    client.query("SELECT user_id, user_name, user_pass, user_age, user_sex, user_email, user_tel, user_card, user_photo FROM USER WHERE user_id =?",[userId],function(error,result){
        callback(result);
    })
}
function editUser(client,user,cclj,callback){
    client.query("UPDATE USER SET user_name = ?, user_pass = ?, user_age = ?, user_sex = ?, user_email = ?, user_tel = ?, user_card = ?, user_photo = ? WHERE user_id = ?",
        [user.userName[0],user.password[0],user.userAge[0],user.userSex[0],user.userEmail[0],user.userPhone[0],user.usercard[0],cclj,user.userId[0]],function(error,result){
            callback(result.affectedRows);
        })
}
//删除多个用户
function deleteUsersByIds(client,userIds,callback){
    console.info("这是userIds=["+userIds+"]");//打印选中的用户Id
    var jieguo=[];                             //定义一个数组变量，将每次删掉的结果数量存入
    var funs=[];                                //定义一个数组变量，将每次删除的方法存入
    var y=0;                                    //定义一个变量，初始值设为0，用于删除方法循环调用时
    for(var i=0;i<userIds.length;i++){
        funs[i]=function(callback){
            console.info("===================");
            client.query("DELETE FROM USER WHERE user_id =?",[userIds[y]],function(error,result){  //执行sql语句，进行删除操作  只是定义，并未调用，不执行操作
                    console.info("这是y=["+y+"]");
                    y++;                                                                             //每执行一次将y+1，删除下一条
                    if(result.affectedRows==1){                                                      //判断是否删除成功
                        jieguo.push(result);                                                         //若删除成功，将删除的结果（1）给jieguo数组
                    }
                    callback(error,jieguo.length);                                            //返回结果的个数
                }
            )
        }
    }
    async.series(funs,function(error,result)                                                    //调用funs中的每一个方法，执行删除
    {
        callback(jieguo.length);                                                            //将整个方法是结果返回js回调函数中
    })
}
exports.createServer=createServer;
exports.dengLu=dengLu;
exports.selectUser=selectUser;
exports.insertUser=insertUser;
exports.deleteUserById=deleteUserById;
exports.selectUserById=selectUserById;
exports.editUser=editUser;
exports.deleteUsersByIds=deleteUsersByIds;